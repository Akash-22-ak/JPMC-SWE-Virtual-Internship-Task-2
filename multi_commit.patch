From c7040b0f996e53907655fdec2de11c93aa4c1d34 Mon Sep 17 00:00:00 2001
From: Akshith Mogulluri <a.mogulluri@gmail.com>
Date: Mon, 5 Jun 2023 21:59:25 -0500
Subject: [PATCH 1/2] Task 2 completed

---
 src/App.tsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0c89ed6..d5ade79 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,7 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
-  showGraph = boolean,
+  showGraph: boolean,
 }
 
 /**
-- 
2.41.0.windows.1


From 3f5f15cd81e297f5f45b8fd9567184fca2d72d6b Mon Sep 17 00:00:00 2001
From: Akshith Mogulluri <a.mogulluri@gmail.com>
Date: Mon, 5 Jun 2023 22:09:29 -0500
Subject: [PATCH 2/2] Task 2 completed

---
 src/App.tsx   |  6 +++---
 src/Graph.tsx | 17 +++++++++++------
 2 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index d5ade79..357e96a 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -23,7 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
-      showGraph = false,
+      showGraph: false,
     };
   }
 
@@ -44,8 +44,8 @@ class App extends Component<{}, IState> {
     const interval = setInterval(() => {
       DataStreamer.getData((serverResponds: ServerRespond[]) => {
         this.setState({
-          data = serverResponds,
-          showGraph = true,
+          data: serverResponds,
+          showGraph: true,
         });
       });
       x++;
diff --git a/src/Graph.tsx b/src/Graph.tsx
index f280e57..bc53148 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -32,7 +32,8 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+
+    const elem= document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -46,14 +47,18 @@ class Graph extends Component<IProps, {}> {
     }
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('column-pivots', '["stock"]');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('aggregates', `
+      {"stock": "distinct count",
+      "top_ask_price": "avg",
+      "top_bid_price": "avg",
+      "timestamp": "distinct count"}`);
 
       // Add more Perspective configurations here.
       elem.load(this.table);
-      elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column_pivots', '["stocks"]');
-      elem.setAttribute('row_pivots', '["timestamp"]');
-      elem.setAttribute('columns' , '["top_ask_price"]');
-      elem.setAttribute('aggregates', '{"stock":"distinct count", "top_ask_price":"avg", "top_bid_price":"avg", "timestamp":"distinct count"}');
     }
   }
 
-- 
2.41.0.windows.1

