From 49acd5c6cec1dddbe53535abb17ce472b15917b3 Mon Sep 17 00:00:00 2001
From: nikhil0502 <58218276+nikhil0502@users.noreply.github.com>
Date: Thu, 23 Nov 2023 15:37:48 +0530
Subject: [PATCH] Updated correct code

---
 src/App.tsx   | 21 ++++++++++++++++++---
 src/Graph.tsx |  4 ++--
 2 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..d807d3e 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph:false,
     };
   }
 
@@ -29,18 +31,31 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+  if(this.state.showGraph){
+  return (<Graph data={this.state.data}/>)
+  }
+
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+  let x=0;
+  const interval = setInterval(()=>{
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
+    this.setState({ data:serverResponds,
+     showGraph:true,});
+  });
+  x++;
+  if(x>1000){
+  clearInterval(interval);
+  }
+
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+
+    },100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..db640f2 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem= document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
-- 
2.31.1.windows.1

